// <auto-generated />
using System;
using Chefs_and_Dishes.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chefs_and_Dishes.Migrations
{
    [DbContext(typeof(ChefDishContext))]
    [Migration("20190816212514_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Chefs_and_Dishes.Models.Chef", b =>
                {
                    b.Property<int>("ChefId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("DishId");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<DateTime>("_birthday");

                    b.Property<string>("_fname")
                        .IsRequired();

                    b.Property<string>("_lname")
                        .IsRequired();

                    b.HasKey("ChefId");

                    b.ToTable("chefs");
                });

            modelBuilder.Entity("Chefs_and_Dishes.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChefId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<DateTime>("UpdatedAt");

                    b.Property<int>("_calories");

                    b.Property<string>("_description")
                        .IsRequired();

                    b.Property<string>("_name")
                        .IsRequired()
                        .HasMaxLength(45);

                    b.Property<int>("_tastiness");

                    b.HasKey("DishId");

                    b.HasIndex("ChefId");

                    b.ToTable("dishes");
                });

            modelBuilder.Entity("Chefs_and_Dishes.Models.Dish", b =>
                {
                    b.HasOne("Chefs_and_Dishes.Models.Chef", "Creator")
                        .WithMany("CreatedDishes")
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
